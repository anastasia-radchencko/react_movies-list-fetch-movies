{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","setNewMovie","searchValue","setSearchValue","error","setError","loading","setLoading","handleFindMovie","e","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","Title","Poster","Plot","imdbID","handleSetMovie","finally","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","undefined","App","setMovies","some","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd71ab0f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | undefined,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAddMovie:(movie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [movie, setNewMovie] = useState<Movie>();\n  const [searchValue, setSearchValue] = useState('');\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  function handleSetMovie(response: MovieData | ResponseError) {\n    if ('Error' in response) {\n      setError(true);\n\n      return;\n    }\n\n    const {\n      Title, Poster, Plot, imdbID,\n    } = response;\n\n    const DEFAULT_IMG\n    = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n    const poster = Poster === 'N/A'\n      ? DEFAULT_IMG\n      : Poster;\n\n    setNewMovie({\n      title: Title,\n      description: Plot,\n      imgUrl: poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    });\n  }\n\n  function handleFindMovie(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    setLoading(true);\n    e.preventDefault();\n    setError(false);\n    getMovie(searchValue)\n      .then(response => handleSetMovie(response))\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  }\n\n  function handleAdd() {\n    if (movie) {\n      setSearchValue('');\n      onAddMovie(movie);\n      setNewMovie(undefined);\n    }\n  }\n\n  function handleChange(value: string) {\n    setError(false);\n    setSearchValue(value);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': error })}\n              value={searchValue}\n              onChange={(e) => handleChange(e.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ) }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', { 'is-loading': loading })}\n              disabled={!searchValue}\n              onClick={(e) => handleFindMovie(e)}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cde7c2bd';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  function onAddMovie(movie: Movie) {\n    const findCopy = movies.some(item => item.title === movie.title);\n\n    if (!findCopy) {\n      setMovies([...movies, movie]);\n    }\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={(movie) => onAddMovie(movie)}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}